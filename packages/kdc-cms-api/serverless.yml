service: kdc-cms-api

frameworkVersion: ">=1.1.0 <2.0.0"

plugins:
  - serverless-plugin-monorepo
  - serverless-offline
  - serverless-stage-manager
  - serverless-bundle

custom:
  stages:
    - dev
    - staging
    - prod

package:
  individually: true

provider:
  name: aws
  runtime: nodejs10.x
  memorySize: 256
  timeout: 6
  stage: ${opt:stage}
  region: ${file(../../config.${self:provider.stage}.yml):REGION, 'localhost'}
  profile: ${file(../../config.${self:provider.stage}.yml):PROFILE, 'default'}
  environment:
    NODE_ENV: ${self:provider.stage}
    JWT_SECRET: ${file(../../config.${self:provider.stage}.yml):JWT_SECRET}
    DDB_TABLE: "${file(../../resources/database/serverless.yml):service}-${self:provider.stage}"
    DDB_REGION: ${self:provider.region}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DDB_TABLE}"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DDB_TABLE}/index/*"

functions:
  - ${file(services/auth/serverless.yml)}
  - ${file(services/define/pages/serverless.yml)}
  - ${file(services/pages/serverless.yml)}
  - ${file(services/define/contents/serverless.yml)}
  - ${file(services/contents/serverless.yml)}

resources:
  Outputs:
    ApiGatewayRestApiId:
      Value:
        Ref: ApiGatewayRestApi
      Export:
        Name: ${self:provider.stage}-ApiGatewayRestApiId

    ApiGatewayRestApiRootResourceId:
      Value:
        Fn::GetAtt:
          - ApiGatewayRestApi
          - RootResourceId
      Export:
        Name: ${self:provider.stage}-ApiGatewayRestApiRootResourceId
